// <auto-generated />
using System;
using GameDBContext.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(GameDbContext))]
    [Migration("20221107202821_First build")]
    partial class Firstbuild
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GameDBContext.Entities.CurrentBattle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("FirstFieldData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Move")
                        .HasColumnType("bit");

                    b.Property<string>("SecondFieldData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CurrentBattles");
                });

            modelBuilder.Entity("GameDBContext.Entities.Friend", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("User1Id")
                        .HasColumnType("int");

                    b.Property<int?>("User2Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("User1Id");

                    b.HasIndex("User2Id");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("GameDBContext.Entities.Registration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("RegCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Registrations");
                });

            modelBuilder.Entity("GameDBContext.Entities.Reward", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BattlesPlayed")
                        .HasColumnType("int");

                    b.Property<int>("BattlesWon")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rewards");
                });

            modelBuilder.Entity("GameDBContext.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("CurrentBattleId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RegistrationId")
                        .HasColumnType("int");

                    b.Property<int?>("RewardId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CurrentBattleId");

                    b.HasIndex("RegistrationId");

                    b.HasIndex("RewardId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GameDBContext.Entities.Friend", b =>
                {
                    b.HasOne("GameDBContext.Entities.User", "User1")
                        .WithMany()
                        .HasForeignKey("User1Id");

                    b.HasOne("GameDBContext.Entities.User", "User2")
                        .WithMany()
                        .HasForeignKey("User2Id");

                    b.Navigation("User1");

                    b.Navigation("User2");
                });

            modelBuilder.Entity("GameDBContext.Entities.User", b =>
                {
                    b.HasOne("GameDBContext.Entities.CurrentBattle", "CurrentBattle")
                        .WithMany("Users")
                        .HasForeignKey("CurrentBattleId");

                    b.HasOne("GameDBContext.Entities.Registration", "Registration")
                        .WithMany("Users")
                        .HasForeignKey("RegistrationId");

                    b.HasOne("GameDBContext.Entities.Reward", "Reward")
                        .WithMany("Users")
                        .HasForeignKey("RewardId");

                    b.Navigation("CurrentBattle");

                    b.Navigation("Registration");

                    b.Navigation("Reward");
                });

            modelBuilder.Entity("GameDBContext.Entities.CurrentBattle", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GameDBContext.Entities.Registration", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GameDBContext.Entities.Reward", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
